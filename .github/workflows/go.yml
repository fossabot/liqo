name: Integration Pipeline
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        component:
        - virtual-kubelet
        - liqonet
        - advertisement-broadcaster
        - advertisement-operator
        - init-vkubelet
        - schedulingnode-operator
        - discovery
        - peering-request-operator
        - tray-agent
        - secret-creation
        - init-pod-mutator
        - pod-mutator
        - peering-request-webhook-init
    steps:
      - name: setup-docker
        uses: docker-practice/actions-setup-docker@0.0.1
      - name: Set the commit to build
        run: |
         if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
            echo "::set-env name=commit_ref::${{ github.event.pull_request.head.sha }}"
         else
            echo "::set-env name=commit_ref::${{ github.sha }}"
         fi
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          ref: "${{ env.commit_ref }}"
      - name: Push ${{ matrix.component }} image on repo (Master)
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: liqo/${{ matrix.component }}
          username: ${{ secrets.DOCKER_USERNAME }}
          dockerfile: build/${{ matrix.component }}/Dockerfile
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,${{ env.commit_ref }}"
        if: github.ref == 'refs/heads/master' && github.event.repository.full_name == 'liqoTech/liqo'
      - name: Push ${{ matrix.component }} image on repo (Development)
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: liqo/${{ matrix.component }}-ci
          username: ${{ secrets.DOCKER_USERNAME }}
          dockerfile: build/${{ matrix.component }}/Dockerfile
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "${{ env.commit_ref }}"
        if: github.ref != 'refs/heads/master' && github.event.repository.full_name == 'liqoTech/liqo'
      - name: Build Only ${{ matrix.component }} image (Forked Repositories)
        uses: docker/build-push-action@v1
        with:
          name: liqo/${{ matrix.component }}-ci
          dockerfile: build/${{ matrix.component }}/Dockerfile
          push: false
        if: github.ref != 'refs/heads/master' && github.event.repository.full_name != 'liqoTech/liqo'
  e2e-test-trigger:
     runs-on: ubuntu-latest
     needs: [build, test]
     strategy:
       fail-fast: false
       matrix:
         component:
         - liqops
         - doc-website
     steps:
       - name: Set the commit to build
         run: |
           if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
              echo "::set-env name=commit_ref::${{ github.event.pull_request.head.sha }}"
           else
              echo "::set-env name=commit_ref::${{ github.sha }}"
           fi
       - uses: actions/checkout@v2
         with:
           ref: "${{ env.commit_ref }}"
       - name: "Make scripts executable"
         run: chmod +x ./scripts/utils/*
       - name: "Set PR number"
         run: echo "::set-env name=branch_owner::`git log -1 --format='%ae' $commit_ref^!`"
       - name: "Install python dependencies"
         run: pip install requests
       - name: "Set branch name"
         run: echo "::set-env name=branch_name::`echo ${GITHUB_REF#refs/*/}`"
       - name: "Notify PR Event to Liqops"
         run: |
           curl -X POST https://api.github.com/repos/LiqoTech/${{ matrix.component }}/dispatches \
           -H 'Accept: application/vnd.github.everest-preview+json' \
           -u ${{ secrets.CI_TOKEN }} \
           --data '{"event_type": "dev-event", "client_payload": { "actor": "${{ env.branch_owner }}", "ref": "${{ env.branch_name }}", "commit":"${{ env.commit_ref }}" }}'
  release:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - uses: 8398a7/action-slack@v2
        with:
          status: ${{ job.status }}
          author_name: Integration Test # default: 8398a7@action-slack
        env:
          GITHUB_TOKEN: ${{ secrets.CI_TOKEN }} # required
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
        if: always() && github.ref == 'refs/heads/master' # Pick up events even if the job fails or is canceled.
  test:
    name: Test Launch
    runs-on: ubuntu-20.04
    steps:
    - name: Set the commit to build
      run: |
        if [ "$GITHUB_EVENT_NAME" == "pull_request" ]; then
           echo "::set-env name=commit_ref::${{ github.event.pull_request.head.sha }}"
        else
           echo "::set-env name=commit_ref::${{ github.sha }}"
        fi
    - name: Set up Go 1.13
      uses: actions/setup-go@v2
      with:
        go-version: 1.13
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        ref: "${{ env.commit_ref }}"
    - name: Install Kubebuilder
      run: |
        version=2.3.1 # latest stable version
        arch=amd64
        curl -L -O "https://github.com/kubernetes-sigs/kubebuilder/releases/download/v${version}/kubebuilder_${version}_linux_${arch}.tar.gz"
        tar -zxvf kubebuilder_${version}_linux_${arch}.tar.gz
        mv kubebuilder_${version}_linux_${arch} kubebuilder && sudo mv kubebuilder /usr/local/
        export PATH=$PATH:/usr/local/kubebuilder/bin
    - name: Get dependencies
      run: |
        go get -u github.com/ory/go-acc
    - name: install tray-agent dependencies
      run: sudo apt update && sudo apt-get install gcc libgtk-3-dev libappindicator3-dev libwebkit2gtk-4.0-dev xclip
    - run: go-acc ./... --ignore liqo/test/e2e
    - name: Send coverage
      uses: shogo82148/actions-goveralls@v1
      with:
        path-to-profile: coverage.txt

